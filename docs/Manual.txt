### User Manual


## Table of Contents

1. [Introduction](#introduction)
2. [System Requirements](#system-requirements)
3. [Installation Guide](#installation-guide)
4. [How to Use](#how-to-use)
    - [main1.py](#main1py)
    - [main2.py](#main2py)
5. [Command Flags](#command-flags)
6. [Troubleshooting](#troubleshooting)
7. [FAQ](#faq)
8. [Contact Support](#contact-support)


### Introduction

Welcome to the user manual for our chatbot application. This guide aims to provide you with all the information you need to install, run, and interact with the application effectively.


### System Requirements

- Windows 10 or higher / Linux (WSL recommended)
- Python 3.8 or higher
- At least 4GB of RAM
- Internet connection for initial setup


### Installation Guide

1. Download the source code from our GitHub repository.
2. Navigate to the downloaded folder and open a terminal window.
3. Run `pip install -r requirements.txt` to install all dependencies.
4. You're now ready to run the application!


### How to Use

#### main1.py

1. **Initialization**: Open a terminal window and run `python main1.py`.
2. **Model Selection**: A menu will appear, prompting you to select the AI model you wish to use. Follow the on-screen instructions.
3. **Roleplay Configuration**: You'll be asked to enter your name, the model's name and role, and the scenario location. This sets the context for your interaction.
4. **Main Loop**: You'll enter the main chat interface. Here, you can type your message to the model. Special commands include:
    - `reset`: Resets the chat and roleplay configuration.
    - `quit`: Exits the application.

#### main2.py

1. **Initialization**: Open a new terminal window and run `python main2.py`.
2. **Automatic Updates**: This script watches for changes in `config.yaml` and updates the application accordingly.
3. **Sound and TTS**: If enabled, you'll hear sound effects and text-to-speech for model responses.


### Command Flags

- `--logs`: Enable detailed logging in `main1.py`.
- `--tts`: Enable text-to-speech in `main2.py`.
- `--sound`: Enable sound effects in `main2.py`.


### Troubleshooting

- **Issue**: The application crashes during startup.
  - **Solution**: Ensure you've installed all the dependencies by running `pip install -r requirements.txt`.

- **Issue**: No sound or text-to-speech.
  - **Solution**: Make sure you've enabled the `--tts` and `--sound` flags when running `main2.py`.

### FAQ

- **Q**: Can I run both `main1.py` and `main2.py` simultaneously?
  - **A**: Yes, `main1.py` is intended for WSL, and `main2.py` is for native Windows. They can run concurrently.

- **Q**: How do I reset the chat?
  - **A**: Type `reset` in the main chat interface.